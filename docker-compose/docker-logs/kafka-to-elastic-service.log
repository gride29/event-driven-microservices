2023-09-07 11:23:43 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://config-server:8888
2023-09-07 11:23:45 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=83ce3497665c195d6ff5c84b260454944f628786, state=null
2023-09-07 11:23:45 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gride29/spring-cloud-config-server-repository/config-client-kafka_to_elastic.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gride29/spring-cloud-config-server-repository/config-client.yml'}]
2023-09-07 11:23:45 [main] INFO  c.g.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following profiles are active: kafka_to_elastic
2023-09-07 11:23:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-07 11:23:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1147ms. Found 1 Elasticsearch repository interfaces.
2023-09-07 11:23:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-07 11:23:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68ms. Found 0 Reactive Elasticsearch repository interfaces.
2023-09-07 11:23:52 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b1a6cc69-23b0-361b-af06-6da502abe9bc
2023-09-07 11:23:53 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$54597484] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-09-07 11:23:55 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-09-07 11:23:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-09-07 11:23:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-09-07 11:23:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1694085835964
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:23:57 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-09-07 11:24:00 [main] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2023-09-07 11:24:00 [main] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2023-09-07 11:24:00 [main] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2023-09-07 11:24:00 [main] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2023-09-07 11:24:00 [main] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch cluster: 7.9.1
2023-09-07 11:24:02 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: a8f7b7dd-93b4-45c1-8134-ee62ca4b8912

2023-09-07 11:24:07 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8182
2023-09-07 11:24:07 [main] INFO  c.g.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 32.881 seconds (JVM running for 38.932)
2023-09-07 11:24:07 [main] INFO  c.g.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2023-09-07 11:24:07 [main] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Topics with name twitter-topic is ready for operations!
2023-09-07 11:24:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2023-09-07 11:24:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1694085848053
2023-09-07 11:24:08 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2023-09-07 11:24:08 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-09-07 11:24:08 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2023-09-07 11:24:08 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1694085848200
2023-09-07 11:24:08 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2023-09-07 11:24:08 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-09-07 11:24:08 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2023-09-07 11:24:08 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://schema-registry:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2023-09-07 11:24:08 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1694085848280
2023-09-07 11:24:08 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2023-09-07 11:24:08 [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-09-07 11:24:08 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: dLTxeZdcRQaUjNRlia7UvA
2023-09-07 11:24:08 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: dLTxeZdcRQaUjNRlia7UvA
2023-09-07 11:24:08 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: dLTxeZdcRQaUjNRlia7UvA
2023-09-07 11:24:18 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator kafka-broker-2:9092 (id: 2147483645 rack: null)
2023-09-07 11:24:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator kafka-broker-2:9092 (id: 2147483645 rack: null)
2023-09-07 11:24:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator kafka-broker-2:9092 (id: 2147483645 rack: null)
2023-09-07 11:24:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2023-09-07 11:24:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2023-09-07 11:24:18 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2023-09-07 11:24:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Finished assignment for group at generation 1: {consumer-twitter-topic-consumer-1-66d16779-fb6a-4019-90b8-8e30f6e0f1cb=Assignment(partitions=[twitter-topic-0]), consumer-twitter-topic-consumer-2-7e9740b5-fece-435f-99bc-04f66f371769=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-3-c3d7897e-6ef9-46be-b550-21eadcf45044=Assignment(partitions=[twitter-topic-2])}
2023-09-07 11:24:26 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation 1
2023-09-07 11:24:26 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation 1
2023-09-07 11:24:26 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation 1
2023-09-07 11:24:26 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2023-09-07 11:24:26 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2023-09-07 11:24:26 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2023-09-07 11:24:26 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-0
2023-09-07 11:24:26 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-2
2023-09-07 11:24:26 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-1
2023-09-07 11:24:27 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-2 to offset 0.
2023-09-07 11:24:27 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2023-09-07 11:24:27 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-0 to offset 0.
2023-09-07 11:24:27 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2023-09-07 11:24:27 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-1 to offset 0.
2023-09-07 11:24:27 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2023-09-07 11:24:28 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [6282938394093586204], partitions [0] and offsets [0], sending it to elastic: Thread id 36
2023-09-07 11:24:28 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 4 number of message received with keys [386675735770465224, 617192473961153026, 1571247198837407248, 8809593171089343744], partitions [1, 1, 1, 1] and offsets [0, 1, 2, 3], sending it to elastic: Thread id 38
2023-09-07 11:24:28 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [1623429967293246973], partitions [2] and offsets [0], sending it to elastic: Thread id 40
2023-09-07 11:24:30 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [7072444294027932073]
2023-09-07 11:24:30 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [2798095130182669588]
2023-09-07 11:24:30 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [7633055336446809271, 4517001747214256108, 2901561309962313206, 4706171031167419920]
2023-09-07 11:24:30 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [7072444294027932073]
2023-09-07 11:24:30 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [2798095130182669588]
2023-09-07 11:24:30 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [7633055336446809271, 4517001747214256108, 2901561309962313206, 4706171031167419920]
2023-09-07 11:24:32 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [6816277803567946964], partitions [1] and offsets [4], sending it to elastic: Thread id 38
2023-09-07 11:24:32 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [5826329496635728922]
2023-09-07 11:24:32 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [5826329496635728922]
2023-09-07 11:24:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [6694867007782846506], partitions [2] and offsets [1], sending it to elastic: Thread id 40
2023-09-07 11:24:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [7761864449367696542]
2023-09-07 11:24:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [7761864449367696542]
2023-09-07 11:24:52 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [6234325664482272187], partitions [0] and offsets [1], sending it to elastic: Thread id 36
2023-09-07 11:24:52 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [7691235776536357598]
2023-09-07 11:24:52 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [7691235776536357598]
2023-09-07 11:25:02 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [8405069215369645035], partitions [0] and offsets [2], sending it to elastic: Thread id 36
2023-09-07 11:25:02 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [5860938769351992598]
2023-09-07 11:25:02 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [5860938769351992598]
2023-09-07 11:25:12 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [7421660472650804797], partitions [0] and offsets [3], sending it to elastic: Thread id 36
2023-09-07 11:25:12 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [8619802935449882776]
2023-09-07 11:25:12 [twitter-topic-consumer-0-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [8619802935449882776]
2023-09-07 11:25:22 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [2501953979580915537], partitions [1] and offsets [5], sending it to elastic: Thread id 38
2023-09-07 11:25:22 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [6031083047347073289]
2023-09-07 11:25:22 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [6031083047347073289]
2023-09-07 11:25:32 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [9127779050744211736], partitions [2] and offsets [2], sending it to elastic: Thread id 40
2023-09-07 11:25:32 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [1772641682568955896]
2023-09-07 11:25:32 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [1772641682568955896]
2023-09-07 11:25:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [7997063920513722498], partitions [2] and offsets [3], sending it to elastic: Thread id 40
2023-09-07 11:25:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [6311726604628023482]
2023-09-07 11:25:42 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [6311726604628023482]
2023-09-07 11:25:52 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [682169521557357310], partitions [2] and offsets [4], sending it to elastic: Thread id 40
2023-09-07 11:25:52 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [5450528159024681518]
2023-09-07 11:25:52 [twitter-topic-consumer-2-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [5450528159024681518]
2023-09-07 11:26:02 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 1 number of message received with keys [6922981236713802147], partitions [1] and offsets [6], sending it to elastic: Thread id 38
2023-09-07 11:26:02 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.gride29.microservices.demo.elastic.model.index.impl.TwitterIndexModel and ids: [9039052803221824287]
2023-09-07 11:26:02 [twitter-topic-consumer-1-C-1] INFO  c.g.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - Documents indexed successfully with ids: [9039052803221824287]
